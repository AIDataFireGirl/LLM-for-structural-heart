# Structural Heart LLM System - Docker Compose Configuration
# Complete deployment with Redis, monitoring, and API

version: '3.8'

services:
  # =============================================================================
  # REDIS CACHE SERVICE
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: structural-heart-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - structural-heart-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # STRUCTURAL HEART LLM API
  # =============================================================================
  llm-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: structural-heart-llm
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - ENABLE_METRICS=true
      - API_KEY=${API_KEY:-your-api-key-here}
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./cache:/app/cache
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - structural-heart-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =============================================================================
  # PROMETHEUS MONITORING
  # =============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: structural-heart-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - structural-heart-network

  # =============================================================================
  # GRAFANA DASHBOARD
  # =============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: structural-heart-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - structural-heart-network

  # =============================================================================
  # NGINX REVERSE PROXY (Optional)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: structural-heart-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - llm-api
    networks:
      - structural-heart-network

  # =============================================================================
  # DEVELOPMENT SERVICE (Optional)
  # =============================================================================
  llm-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: structural-heart-llm-dev
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=DEBUG
      - DEBUG=true
      - API_KEY=${API_KEY:-your-api-key-here}
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - structural-heart-network
    profiles:
      - development

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  structural-heart-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 